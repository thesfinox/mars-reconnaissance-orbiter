---
# GitLab CI/CD Configuration
# Matches the GitHub Actions workflow in .github/workflows/tests.yml
# Runs tests, linting, docs build, and package build

variables:
  # pip cache configuration
  PIP_CACHE_DIR: .cache/pip
  # Artifact paths
  COVERAGE_FILE: coverage.xml
  REPORT_FILE: report.xml
  DOCS_DIR: docs/build/html
  DIST_DIR: dist

# Define pipeline stages
stages:
  - test
  - quality
  - build
  - status

# Cache configuration for pip
.pip_cache:
  cache:
    key:
      files:
        - pyproject.toml
    paths:
      - .cache/pip

# Base configuration for jobs using pip
.base_job:
  extends: .pip_cache
  before_script:
    - python -m pip install --upgrade pip
    - python -m pip install .

# Test job with Python version matrix (3.12 and 3.11)
test:python3.12:
  extends: .base_job
  stage: test
  image: python:3.12
  tags:
    - python
  before_script:
    - python -m pip install --upgrade pip
    - python -m pip install --group test .
    - python -m pip uninstall -y opencv-python
    - python -m pip install "opencv-python-headless==4.11.0.86"
  script:
    - >
      pytest tests/ -v --cov=src/hsimars
      --cov-report=term-missing --cov-report=xml
      --junitxml=${REPORT_FILE}
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - ${COVERAGE_FILE}
      - ${REPORT_FILE}
    reports:
      junit: ${REPORT_FILE}
      coverage_report:
        coverage_format: cobertura
        path: ${COVERAGE_FILE}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

test:python3.11:
  extends: .base_job
  stage: test
  image: python:3.11
  tags:
    - python
  before_script:
    - python -m pip install --upgrade pip
    - python -m pip install --group test .
    - python -m pip uninstall -y opencv-python
    - python -m pip install "opencv-python-headless==4.11.0.86"
  script:
    - >
      pytest tests/ -v --cov=src/hsimars
      --cov-report=term-missing --cov-report=xml
      --junitxml=${REPORT_FILE}
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - ${COVERAGE_FILE}
      - ${REPORT_FILE}
    reports:
      junit: ${REPORT_FILE}
      coverage_report:
        coverage_format: cobertura
        path: ${COVERAGE_FILE}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# Code quality checks with ruff
lint:
  extends: .base_job
  stage: quality
  image: python:3.12
  tags:
    - python
  before_script:
    - python -m pip install --upgrade pip
    - python -m pip uninstall -y opencv-python
    - python -m pip install "opencv-python-headless==4.11.0.86" "ruff>=0.1.0"
  script:
    - echo "Checking code formatting with ruff..."
    - >
      ruff check src/ tests/ ||
      echo "⚠️  Ruff check found issues (continuing)"
    - echo "Checking code style with ruff format..."
    - >
      ruff format --check src/ tests/ ||
      echo "⚠️  Ruff format found issues (continuing)"
  allow_failure: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# Documentation build with Sphinx
docs:
  extends: .base_job
  stage: quality
  image: python:3.12
  tags:
    - python
  before_script:
    - apt-get update
    - apt-get install -y pandoc
    - python -m pip install --upgrade pip
    - python -m pip install --group docs .
    - python -m pip uninstall -y opencv-python
    - python -m pip install "opencv-python-headless==4.11.0.86"
  script:
    - cd docs
    - sphinx-build -W -b html source build/html
  artifacts:
    expire_in: 7 days
    paths:
      - ${DOCS_DIR}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# Check documentation coverage
check-docs:
  extends: .base_job
  stage: quality
  image: python:3.12
  tags:
    - python
  before_script:
    - python -m pip install --upgrade pip
    - python -m pip install opencv-python-headless==4.11.0.86
    - python -m pip install .
  script:
    - check-docs hsimars --out docs_report.txt
    - cat docs_report.txt
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - docs_report.txt
  allow_failure: false
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# Build distribution packages
build:
  extends: .base_job
  stage: build
  image: python:3.12
  tags:
    - python
  needs:
    - job: test:python3.12
    - job: test:python3.11
    - job: lint
      optional: true
    - job: docs
    - job: check-docs
  before_script:
    - python -m pip install --upgrade pip
    - python -m pip uninstall -y opencv-python
    - >
      python -m pip install "opencv-python-headless==4.11.0.86"
      "build>=1.0.0" "twine>=4.0.0"
  script:
    - python -m build
    - echo "Checking distribution with twine..."
    - twine check dist/* || echo "⚠️  Twine check found issues (continuing)"
  artifacts:
    expire_in: 7 days
    paths:
      - ${DIST_DIR}
  allow_failure: false
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# GitLab Pages deployment (for main branch only)
pages:
  extends: .base_job
  stage: build
  image: python:3.12
  tags:
    - python
  needs:
    - job: docs
  before_script:
    - apt-get update
    - apt-get install -y pandoc
    - python -m pip install --upgrade pip
    - python -m pip install --group docs .
    - python -m pip uninstall -y opencv-python
    - python -m pip install "opencv-python-headless==4.11.0.86"
  script:
    - sphinx-build -b html docs/source public
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "mars_data"'

# Final status check job
status:
  stage: status
  image: python:3.12-slim
  tags:
    - python
  needs:
    - job: test:python3.12
    - job: test:python3.11
    - job: lint
      optional: true
    - job: docs
    - job: check-docs
    - job: build
  script:
    - |
      echo "==================================="
      echo "Pipeline Status Summary"
      echo "==================================="
      echo "✅ All checks completed successfully!"
      echo ""
      echo "Jobs executed:"
      echo "  - Tests (Python 3.12): Passed"
      echo "  - Tests (Python 3.11): Passed"
      echo "  - Lint: Completed"
      echo "  - Docs: Passed"
      echo "  - Check Docs: Passed"
      echo "  - Build: Passed"
      echo ""
      echo "==================================="
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  when: on_success
